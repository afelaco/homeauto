x-airflow-common:
  &airflow-common
  image: ${AIRFLOW_IMAGE_NAME}
  env_file:
    - .env
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW_FERNET_KEY}
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/airflow
    AIRFLOW_CONFIG: '${AIRFLOW_HOME}/config/airflow.cfg'
    _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-}
  volumes:
    - ${AIRFLOW_PROJ_DIR:-.}/dags:${AIRFLOW_HOME}/dags
    - ${AIRFLOW_PROJ_DIR:-.}/logs:${AIRFLOW_HOME}/logs
    - ${AIRFLOW_PROJ_DIR:-.}/config:${AIRFLOW_HOME}/config
    - ${AIRFLOW_PROJ_DIR:-.}/plugins:${AIRFLOW_HOME}/plugins
  user: ${AIRFLOW_UID}
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: >
      -c "
      mkdir -p ${AIRFLOW_HOME}/{logs,dags,plugins,config}
      /entrypoint airflow db init
      /entrypoint airflow users create \
        --username ${_AIRFLOW_WWW_USER_USERNAME:-airflow} \
        --password ${_AIRFLOW_WWW_USER_PASSWORD:-airflow} \
        --firstname Airflow \
        --lastname Admin \
        --email admin@example.com \
        --role Admin
      chown -R ${AIRFLOW_UID}:0 ${AIRFLOW_HOME}
      "
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD}
    user: "0:0"

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully

  airflow-cli:
    <<: *airflow-common
    command: bash
    stdin_open: true
    tty: true
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully

volumes:
  postgres-db-volume:
